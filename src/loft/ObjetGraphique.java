package loft;import java.awt.*;import java.awt.event.*;import javax.swing.*;/** * Classe definissant un objet graphique a tracer par la classe Affichage. *  * @author Gaetan, Marlene */abstract class ObjetGraphique {            public ObjetGraphique() {        // do nothing    }            abstract public void dessinerObjet(Graphics g);            public void colorerObjet(Graphics g){        g.setColor(Color.BLACK);    }        public void ligne(Graphics g,int x1,int y1,int x2,int y2) {        g.drawLine(adaptAbs(x1), adaptOrd(y1),                adaptAbs(x2), adaptOrd(y2));    }        public void rectangle(Graphics g, int x, int y, int width, int height) {        g.fillRect(adaptAbs(x), adaptOrd(y), width, height);    }        public void rectangle(Graphics g, float x, float y, int width, int height) {        g.fillRect(adaptAbs(x), adaptOrd(y), width, height);    }        public void cercle(Graphics g, int x, int y, int diameter) {        g.fillOval(adaptAbs(x), adaptOrd(y), diameter, diameter);    }        public void cercle(Graphics g, float x, float y, int diameter) {        g.fillOval(adaptAbs(x), adaptOrd(y), diameter, diameter);    }            /**     * Adapte l'abscisse de l'ObjetGraphique a la taille de l'Affichage     *      * @param x L'abscisse a adapter     * @return L'abscisse adaptee     */    private int adaptAbs(int x) {        return (x * Config.ZOOM_FACTOR) + Config.LEFT_MARGIN;    }        /**     * Adapte l'abscisse de l'ObjetGraphique a la taille de l'Affichage     *      * @param x L'abscisse a adapter     * @return L'abscisse adaptee     */    private int adaptAbs(float x) {        return (int) (x * Config.ZOOM_FACTOR) + Config.LEFT_MARGIN;    }            /**     * Adapte l'ordonnee de l'ObjetGraphique a la taille de l'Affichage     *      * @param y L'ordonnee a adapter     * @return L'ordonnee adaptee     */    private int adaptOrd(int y) {        return (y * Config.ZOOM_FACTOR) + Config.TOP_MARGIN;    }        /**     * Adapte l'ordonnee de l'ObjetGraphique a la taille de l'Affichage     *      * @param y L'ordonnee a adapter     * @return L'ordonnee adaptee     */    private int adaptOrd(float y) {        return (int) (y * Config.ZOOM_FACTOR) + Config.TOP_MARGIN;    }            /**     * Adapte la largeur de l'ObjetGraphique a la taille de l'Affichage     *      * @param x La largeur a adapter     * @return La largeur adaptee     */    private int adaptLarg(int w) {        return (w * Config.ZOOM_FACTOR);    }        /**     * Adapte la hauteur de l'ObjetGraphique a la taille de l'Affichage     *      * @param x La hauteur a adapter     * @return La hauteur adaptee     */    private int adaptHaut(int h) {        return (h * Config.ZOOM_FACTOR);    }}